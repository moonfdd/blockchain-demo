{
    admin: {
      datadir: "E:\\gosoft\\eth\\datadirprivate",
      nodeInfo: {
        enode: "enode://f05e639776c923ba5083634774a9b44bbe157f04df6ce4a46184ed2ffddb1595a116219e3be8a9d774cac4e06527bde9548e4f15bc1a146e8987a97ad0a9eee4@127.0.0.1:30303?discport=0",
        enr: "enr:-Jy4QKEeQeba4TU1uMM_7IOANkqtlSsw5hw3CInXa6GlOPUWRbSaDrwZ4BWupmWRXVL8RI9ZGCu-CNNFFaIJhVejK6aGAY7XVxBDg2V0aMfGhEM20puAgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQLwXmOXdskjulCDY0d0qbRLvhV_BN9s5KRhhO0v_dsVlYRzbmFwwIN0Y3CCdl8",
        id: "0ce3120036270613935abbc50ee55514710beb5705590f0ed9030feda4c1530a",
        ip: "127.0.0.1",
        listenAddr: "[::]:30303",
        name: "Geth/v1.13.14-stable-2bd6bd01/windows-amd64/go1.22.0",
        ports: {
          discovery: 0,
          listener: 30303
        },
        protocols: {
          eth: {...},
          snap: {}
        }
      },
      peers: [],
      addPeer: function(),
      addTrustedPeer: function(),
      clearHistory: function github.com/ethereum/go-ethereum/console.(*Console).clearHistory-fm(),
      exportChain: function(),
      getDatadir: function(callback),
      getNodeInfo: function(callback),
      getPeers: function(callback),
      importChain: function(),
      removePeer: function(),
      removeTrustedPeer: function(),
      sleep: function github.com/ethereum/go-ethereum/internal/jsre.MakeCallback.func1(),
      sleepBlocks: function github.com/ethereum/go-ethereum/internal/jsre.MakeCallback.func1(),
      startHTTP: function(),
      startRPC: function(),
      startWS: function(),
      stopHTTP: function(),
      stopRPC: function(),
      stopWS: function()
    },
    bzz: {
      hive: undefined,
      info: undefined,
      blockNetworkRead: function(),
      download: function(),
      get: function(),
      getHive: function(callback),
      getInfo: function(callback),
      modify: function(),
      put: function(),
      retrieve: function(),
      store: function(),
      swapEnabled: function(),
      syncEnabled: function(),
      upload: function()
    },
    clique: {
      proposals: {},
      discard: function(),
      getProposals: function(callback),
      getSigner: function(),
      getSigners: function(),
      getSignersAtHash: function(),
      getSnapshot: function(),
      getSnapshotAtHash: function(),
      propose: function(),
      status: function()
    },
    currentProvider: {
      send: function github.com/ethereum/go-ethereum/internal/jsre.MakeCallback.func1(),
      sendAsync: function github.com/ethereum/go-ethereum/internal/jsre.MakeCallback.func1()
    },
    db: {
      getHex: function(),
      getString: function(),
      putHex: function(),
      getHex: function()
    },
    debug: {
      accountRange: function(),
      backtraceAt: function(),
      blockProfile: function(),
      chaindbCompact: function(),
      chaindbProperty: function(),
      cpuProfile: function(),
      dbAncient: function(),
      dbAncients: function(),
      dbGet: function(),
      dumpBlock: function(),
      freeOSMemory: function(),
      freezeClient: function(),
      gcStats: function(),
      getAccessibleState: function(),
      getBadBlocks: function(),
      getModifiedAccountsByHash: function(),
      getModifiedAccountsByNumber: function(),
      getRawBlock: function(),
      getRawHeader: function(),
      getRawReceipts: function(),
      getRawTransaction: function(),
      getTrieFlushInterval: function(),
      goTrace: function(),
      intermediateRoots: function(),
      memStats: function(),
      mutexProfile: function(),
      preimage: function(),
      printBlock: function(),
      seedHash: function(),
      setBlockProfileRate: function(),
      setGCPercent: function(),
      setHead: function(),
      setMutexProfileFraction: function(),
      setTrieFlushInterval: function(),
      stacks: function(),
      standardTraceBadBlockToFile: function(),
      standardTraceBlockToFile: function(),
      startCPUProfile: function(),
      startGoTrace: function(),
      stopCPUProfile: function(),
      stopGoTrace: function(),
      storageRangeAt: function(),
      traceBadBlock: function(),
      traceBlock: function(),
      traceBlockByHash: function(),
      traceBlockByNumber: function(),
      traceBlockFromFile: function(),
      traceCall: function(),
      traceTransaction: function(),
      verbosity: function(),
      vmodule: function(),
      writeBlockProfile: function(),
      writeMemProfile: function(),
      writeMutexProfile: function()
    },
    eth: {
      accounts: ["0x7e5f4552091a69125d5dfcb7b8c2659029395bdf", "0x2b5ad5c4795c026514f8317c7a215e218dccd6cf"],
      blockNumber: 116,
      coinbase: "0x7e5f4552091a69125d5dfcb7b8c2659029395bdf",
      compile: {
        lll: function(),
        serpent: function(),
        solidity: function()
      },
      defaultAccount: undefined,
      defaultBlock: "latest",
      gasPrice: 1000000000,
      hashrate: 0,
      maxPriorityFeePerGas: 1000000000,
      mining: true,
      pendingTransactions: [],
      protocolVersion: undefined,
      syncing: false,
      call: function(),
      chainId: function(),
      contract: function(abi),
      createAccessList: function(),
      estimateGas: function(),
      feeHistory: function(),
      fillTransaction: function(),
      filter: function(options, callback, filterCreationErrorCallback),
      getAccounts: function(callback),
      getBalance: function(),
      getBlock: function(),
      getBlockByHash: function(),
      getBlockByNumber: function(),
      getBlockNumber: function(callback),
      getBlockReceipts: function(),
      getBlockTransactionCount: function(),
      getBlockUncleCount: function(),
      getCode: function(),
      getCoinbase: function(callback),
      getCompilers: function(),
      getGasPrice: function(callback),
      getHashrate: function(callback),
      getHeaderByHash: function(),
      getHeaderByNumber: function(),
      getLogs: function(),
      getMaxPriorityFeePerGas: function(callback),
      getMining: function(callback),
      getPendingTransactions: function(callback),
      getProof: function(),
      getProtocolVersion: function(callback),
      getRawTransaction: function(),
      getRawTransactionFromBlock: function(),
      getStorageAt: function(),
      getSyncing: function(callback),
      getTransaction: function(),
      getTransactionCount: function(),
      getTransactionFromBlock: function(),
      getTransactionReceipt: function(),
      getUncle: function(),
      getWork: function(),
      iban: function(iban),
      icapNamereg: function(),
      isSyncing: function(callback),
      namereg: function(),
      resend: function(),
      sendIBANTransaction: function bound transfer(),
      sendRawTransaction: function(),
      sendTransaction: function(),
      sign: function(),
      signTransaction: function(),
      submitTransaction: function(),
      submitWork: function()
    },
    isIBAN: undefined,
    miner: {
      getHashrate: function(),
      setEtherbase: function(),
      setExtra: function(),
      setGasLimit: function(),
      setGasPrice: function(),
      setRecommitInterval: function(),
      start: function(),
      stop: function()
    },
    net: {
      listening: true,
      peerCount: 0,
      version: "666123",
      getListening: function(callback),
      getPeerCount: function(callback),
      getVersion: function(callback)
    },
    personal: {
      listAccounts: ["0x7e5f4552091a69125d5dfcb7b8c2659029395bdf", "0x2b5ad5c4795c026514f8317c7a215e218dccd6cf"],
      listWallets: [{
          accounts: [...],
          status: "Locked",
          url: "keystore://E:\\gosoft\\eth\\datadirprivate\\keystore\\UTC--2024-04-11T08-30-32.445115100Z--7e5f4552091a69125d5dfcb7b8c2659029395bdf"
      }, {
          accounts: [...],
          status: "Locked",
          url: "keystore://E:\\gosoft\\eth\\datadirprivate\\keystore\\UTC--2024-04-11T08-30-45.291182900Z--2b5ad5c4795c026514f8317c7a215e218dccd6cf"
      }],
      deriveAccount: function(),
      ecRecover: function(),
      getListAccounts: function(callback),
      getListWallets: function(callback),
      importRawKey: function(),
      initializeWallet: function(),
      lockAccount: function(),
      newAccount: function github.com/ethereum/go-ethereum/internal/jsre.MakeCallback.func1(),
      openWallet: function github.com/ethereum/go-ethereum/internal/jsre.MakeCallback.func1(),
      sendTransaction: function(),
      sign: function github.com/ethereum/go-ethereum/internal/jsre.MakeCallback.func1(),
      signTransaction: function(),
      unlockAccount: function github.com/ethereum/go-ethereum/internal/jsre.MakeCallback.func1(),
      unpair: function()
    },
    providers: {
      HttpProvider: function(host, timeout, user, password),
      IpcProvider: function(path, net)
    },
    rpc: {
      modules: {
        admin: "1.0",
        clique: "1.0",
        debug: "1.0",
        engine: "1.0",
        eth: "1.0",
        miner: "1.0",
        net: "1.0",
        personal: "1.0",
        rpc: "1.0",
        txpool: "1.0",
        web3: "1.0"
      },
      getModules: function(callback)
    },
    settings: {
      defaultAccount: undefined,
      defaultBlock: "latest"
    },
    shh: {
      addPrivateKey: function(),
      addSymKey: function(),
      deleteKeyPair: function(),
      deleteSymKey: function(),
      generateSymKeyFromPassword: function(),
      getPrivateKey: function(),
      getPublicKey: function(),
      getSymKey: function(),
      hasKeyPair: function(),
      hasSymKey: function(),
      info: function(),
      markTrustedPeer: function(),
      newKeyPair: function(),
      newMessageFilter: function(options, callback, filterCreationErrorCallback),
      newSymKey: function(),
      post: function(),
      setMaxMessageSize: function(),
      setMinPoW: function(),
      version: function()
    },
    txpool: {
      content: {
        pending: {},
        queued: {
          0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf: {...}
        }
      },
      inspect: {
        pending: {},
        queued: {
          0x7E5F4552091A69125d5DfCb7b8C2659029395Bdf: {...}
        }
      },
      status: {
        pending: 0,
        queued: 22
      },
      contentFrom: function(),
      getContent: function(callback),
      getInspect: function(callback),
      getStatus: function(callback)
    },
    version: {
      api: "0.20.1",
      ethereum: undefined,
      network: "666123",
      node: "Geth/v1.13.14-stable-2bd6bd01/windows-amd64/go1.22.0",
      whisper: undefined,
      getEthereum: function(callback),
      getNetwork: function(callback),
      getNode: function(callback),
      getWhisper: function(callback)
    },
    BigNumber: function a(e,n),
    createBatch: function(),
    fromAscii: function(str),
    fromDecimal: function(value),
    fromICAP: function(icap),
    fromUtf8: function(str),
    fromWei: function(number, unit),
    isAddress: function(address),
    isChecksumAddress: function(address),
    isConnected: function(),
    padLeft: function(string, chars, sign),
    padRight: function(string, chars, sign),
    reset: function(keepIsSyncing),
    setProvider: function(provider),
    sha3: function(string, options),
    toAscii: function(hex),
    toBigNumber: function(number),
    toChecksumAddress: function(address),
    toDecimal: function(value),
    toHex: function(val),
    toUtf8: function(hex),
    toWei: function(number, unit)
  }